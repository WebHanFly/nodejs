{"version":3,"sources":["context/contextConfig.js","hoc/HOCconfig.js","hoc/HOCconfig2.js","hoc/HOCtest.js","testson.js","test.js","hooks/hooks.js","hooks/hooks1.js","App.js","serviceWorker.js","index.js"],"names":["theme","light","foreground","background","color","dark","Themecontext","React","createContext","displayName","HOC","InnerComponent","props","state","count","testprops","update","bind","console","log","this","testFun","setState","Component","DataSource","getdata","id","selectData","onChange","e","target","value","name","newProps","data","defaultProps","ButtonTest","HOC1","onClick","children","left","Button3","test","Element","createRef","Btn3fun","prevProps","prevState","nextProps","nextState","htmlFor","ref","inputRef","className","n","Button3Hoc","Button4HOC","Input","HOC2","placeholder","ds","Input2","INput3","Left","Testson","inputElement","nextContext","Consumer","toggleTheme","event","style","testid","Tsss","Test","clickTest","testValue","themevalue","Example","useState","setCount","fruit","setFruit","useContext","Lazycom","lazy","Promise","resolve","reject","setTimeout","useEffect","document","title","str","Math","random","then","promise","testPromise","AsynicFun","math","proxy","proxyFun","fallback","initialState","reducer","action","type","Error","Example1","useReducer","state1","dispatch","App","obj","current","innerHTML","href","rel","Provider","hooks1","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31cff097.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nexport const theme = {\r\n   light : {\r\n       foreground : '#fee',\r\n       background : '#f00',\r\n       color : '#fff',\r\n   },\r\n   dark : {\r\n    foreground : '#000',\r\n    background : '#fff',\r\n    color : '#000',\r\n   }\r\n}\r\n\r\nexport const Themecontext = React.createContext(\r\n    {\r\n        theme : theme.dark, //默认值\r\n    }  \r\n)\r\nThemecontext.displayName = 'MyDisplayName1111';","import React from 'react';\r\n\r\n\r\nconst HOC = (InnerComponent) => class extends React.Component{//首字母大写!!\r\n    // static defaultProps = {\r\n    //     n : 'HOC'\r\n    // }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            count : 1,\r\n            testprops : 'button33333'\r\n        };\r\n        this.update = this.update.bind(this)\r\n    }\r\n    componentWillMount(){\r\n        console.log('HOC will mount')\r\n    }\r\n    componentDidMount(){\r\n        console.log('HOC did mount')\r\n    }\r\n    render(){\r\n        console.log(this.props,this.state,111);\r\n        return(\r\n            <InnerComponent  \r\n                {...this.props}\r\n                {...this.state}\r\n                // data = {this.state}\r\n                update = {this.update}\r\n                testFun = {this.testFun}\r\n            />\r\n        )\r\n    }\r\n    update(){\r\n        const {count} = this.state\r\n        this.setState({count : count + 1});\r\n    }\r\n    testFun(){\r\n        console.log('test---------....')\r\n    }\r\n\r\n}\r\n\r\nexport {HOC} ;","import React from 'react';\r\n\r\nconst DataSource = {\r\n    getdata : (id) =>{\r\n        if(id){\r\n            return 'input' + id;\r\n        }else{\r\n            return 'input';\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst HOC = (InnerComponent,selectData) => class extends React.Component{//首字母大写!!\r\n\r\n   \r\n    static defaultProps = {\r\n        displayName : `HOC -> ` + InnerComponent.displayName ?  InnerComponent.displayName : InnerComponent.name\r\n    }\r\n    static  displayName  =  `HOC -> ` + InnerComponent.displayName ?  InnerComponent.displayName : InnerComponent.name\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        console.log(props,'props------')\r\n        this.state = {\r\n            name :  selectData(DataSource,props),\r\n        };\r\n    }\r\n    onChange = (e) =>{\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            name : e.target.value\r\n        })\r\n    }\r\n \r\n    render(){\r\n       const newProps = {\r\n           name : {\r\n               value : this.state.name,\r\n               onChange : this.onChange\r\n           }\r\n       }\r\n        return(\r\n            <InnerComponent  \r\n                {...this.props}\r\n                data = {newProps}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport {HOC} ;","import React from 'react';\r\nimport {Themecontext} from '../context/contextConfig';\r\nimport {HOC as HOC1} from './HOCconfig';\r\nimport {HOC as HOC2} from './HOCconfig2';\r\n\r\n\r\n//第一个无状态组件；\r\nconst Button = (props) =>{\r\n    console.log(props)\r\n    return(\r\n    <p onClick={props.update}>{props.children}-777-{props.count}-{props.left}</p>\r\n        )\r\n}\r\n\r\n// const ButtonTest = HOC((props) => <div onClick={props.update}>{props.children}-{props.count}</div>) //无状态组件\r\nexport const ButtonTest = HOC1(Button) //无状态组件\r\n\r\n\r\n\r\n//第二个组件\r\nclass Button3 extends React.Component{\r\n    static defaultProps = {\r\n        n : 'C'\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        console.log('Button3--constructor');\r\n        this.state = {\r\n            test : 'test'\r\n        }\r\n        this.Element = React.createRef();\r\n        this.Btn3fun = this.Btn3fun.bind(this);\r\n    }\r\n    componentWillMount(){console.log('Button3 componentWillMount')}\r\n    componentDidMount(){console.log('Button3 componentDidMount',this.props)}\r\n    componentDidUpdate(prevProps, prevState){\r\n        console.log(prevProps, prevState,'prevProps,----------....3333 prevState')\r\n    }\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        console.log(nextProps,nextState,'nextProps,-------->>nextState');\r\n        if(this.props.count === nextProps.count){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n        // return this.props.count !== nextProps.count;\r\n    }\r\n    render(){\r\n       return(\r\n           <div onClick={this.props.update}>\r\n               <label htmlFor=\"123123\" >{this.props.children}-{this.props.count}-{this.state.test}-{this.props.testprops}</label>\r\n               {/* <div>这是第二个无用相关组件</div> */}\r\n               <div ref={this.props.inputRef} className=\"test\" id='test' onClick = {this.Btn3fun}>ccc测试btn3点击</div>\r\n           </div>\r\n        \r\n       )\r\n    }\r\n    Btn3fun(){\r\n        console.log(this.props,this.Element);\r\n        //.getAttribute('id')\r\n        this.props.testFun();\r\n    }\r\n}\r\n\r\nexport const Button3Hoc = HOC1(Button3);\r\n\r\n\r\nclass Button4 extends React.Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.count !== this.props.count;\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        console.log(prevProps, prevState,`prevProps,-----${this.props.count}-----....4444 prevState`)\r\n    }\r\n    componentDidMount(){\r\n        console.log(`componentDidMount,-----${this.props.count}--....4444 componentDidMount`)\r\n    }\r\n    render(){\r\n        console.log(this.props,444444)\r\n        return (\r\n            <div onClick={this.props.update}>\r\n                <div className=\"btn4\">{this.props.children}-{this.props.count}-{this.props.testprops}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport const Button4HOC = HOC1(Button4);\r\n\r\n\r\nconst INPUT = props => (<input {...props.data.name} name=\"name\" placeholder = {props.data.name.value}/>);\r\nexport const Input = HOC2(INPUT,(ds,props)=>ds.getdata(props.id));\r\n\r\nconst INPUT1 = props =>(<input {...props.data.name} name=\"name\" placeholder = {props.data.name.value}/>);\r\nexport const Input2 = HOC2(INPUT1,(ds,props)=>ds.getdata(props.id));\r\n\r\nclass Input3 extends React.Component{\r\n    render(){\r\n        let props = this.props;\r\n        return (\r\n            <div>\r\n               <input {...props.data.name} name=\"name\" placeholder = {props.data.name.value}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport const INput3 = HOC2(Input3,(ds,props)=>ds.getdata(props.id));\r\n\r\n","import React from 'react';\r\nimport {Themecontext} from './context/contextConfig';\r\nimport{ButtonTest,Button3Hoc,Button4HOC,Input,Input2,INput3} from './hoc/HOCtest';\r\n\r\nconst Left = (props)=>{\r\n    return (\r\n        <i>\r\n            left---\r\n        </i>\r\n    )\r\n}\r\n\r\n\r\nclass Testson extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            test :'test父级'\r\n        }\r\n        this.inputElement = React.createRef();\r\n    }\r\n    shouldComponentUpdate(nextProps,nextState,nextContext){\r\n        return true\r\n    }\r\n    componentWillUpdate(nextProps,nextState,){\r\n        console.log(nextProps,nextState,this.inputElement,'nextProps,nextState,')\r\n    }\r\n    render(){\r\n        console.log('父级元素是否执行');\r\n        return (\r\n            <Themecontext.Consumer>\r\n              {\r\n                  ({theme,toggleTheme}) =>{\r\n                      return (<div> \r\n                                <div onClick = {(event) => {toggleTheme(event,'test',this.inputElement)}} style = {theme}>这是测试文字23</div>\r\n                            {/* <div><Button>这是一个高阶组件</Button></div> */}\r\n                            <ButtonTest left = {<Left />}>HOC(1)</ButtonTest>\r\n                            <Button3Hoc id='获取子组件的ref' inputRef={this.inputElement}>\r\n                                <h1 htmlFor=\"0000\">hoc(33333)</h1>\r\n                            </Button3Hoc>\r\n                            <Button4HOC>\r\n                                <i>\r\n                                <Button3Hoc>HOC(3)</Button3Hoc>\r\n                                </i>HOC(4)\r\n                            </Button4HOC>\r\n                            <div><Input></Input></div>\r\n                            <div><Input2 id = '2' testid = '22'></Input2></div>\r\n                            <div><INput3 id = '3'></INput3></div>\r\n                          </div>\r\n                          )\r\n                  }\r\n              }\r\n            </Themecontext.Consumer>\r\n          )\r\n    }\r\n}\r\n\r\nfunction Tsss(){\r\n    return (\r\n        <div>\r\n            wwwww\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {Testson,Tsss} ;\r\n","import React from 'react';\r\nimport {Themecontext} from './context/contextConfig';\r\nimport {Testson,Tsss} from './testson';\r\n\r\n\r\nclass Test extends React.Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n    shouldComponentUpdate(nextProps,nextState,nextContext){\r\n        console.log(nextProps,nextState,nextContext);\r\n        return true\r\n    }\r\n    render(){\r\n        // let props = this.props;\r\n        return (\r\n            <Themecontext.Consumer>\r\n              {\r\n                  ({theme,clickTest,testValue}) =>{\r\n                      return (<div>最上级\r\n                          <Testson themevalue = {theme} testValue = {testValue}></Testson>\r\n                          <div onClick = {() =>{clickTest('test111')}}>点击</div>\r\n                          <Tsss></Tsss>\r\n                      </div>)\r\n                  }\r\n              }\r\n            </Themecontext.Consumer>\r\n          )\r\n    }\r\n}\r\n// Test.contextType = ThemeContext\r\n\r\n\r\nexport default Test;\r\n","import React , {useState,useEffect,useContext ,Suspense } from 'react';\r\nimport {Themecontext}  from '../context/contextConfig';\r\n\r\nconst Example = (props) => {\r\n\r\n\r\n const [count , setCount] = useState(1);\r\n\r\n const [fruit, setFruit] = useState('banana');\r\n\r\n const theme = useContext(Themecontext);\r\n console.log(theme,theme.theme,`theme---${theme.theme}-------`);\r\n\r\n\r\n const Lazycom = React.lazy(() => new Promise((resolve,reject)=>{\r\n     setTimeout(()=>{\r\n       resolve(import('../lazy/all')); \r\n     },3000);\r\n }) );\r\n \r\nconst handleOrangeClick = (str) => {\r\n    setFruit(str);\r\n}\r\n\r\nconst asynicFun = () =>{\r\n    import('../promise/promise').then(\r\n        (promise)=>{\r\n            console.log('../promise/promise')\r\n            promise.testPromise();\r\n        }\r\n    );\r\n\r\n    import('../asynic/test').then(\r\n        (AsynicFun)=>{\r\n            console.log('../asynic/test')\r\n            AsynicFun.AsynicFun();\r\n            AsynicFun.math(2,5);\r\n        }\r\n    );\r\n\r\n    import('../proxy/test').then(\r\n        (proxy)=>{\r\n            proxy.proxyFun();\r\n        }\r\n    );\r\n}\r\n \r\n\r\n useEffect(() => {\r\n    // 使用浏览器的 API 更新页面标题\r\n    document.title = `You clicked ${count} times`;\r\n\r\n    return ()=>{\r\n        console.log('returnnnnnnnnnn')\r\n    }\r\n  });\r\n\r\n return (\r\n     <div>\r\n         <p onClick = {()=>{handleOrangeClick('苹果'+Math.random())}}>hooks--- {fruit}---基本使用规则  {count}</p>\r\n         <button onClick = {() => setCount(count+1)}>hooks点击</button>\r\n         <div onClick = {asynicFun}>点击异步加载代码</div>\r\n         <Suspense fallback={<div>Loading...</div>}>\r\n            <Lazycom title = {'lazycom'}/>\r\n        </Suspense>\r\n     </div>\r\n )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Example;","import React , {useReducer } from 'react';\r\n\r\n\r\nconst initialState = {\r\n    count : 0\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    console.log(state, action)\r\n    switch (action.type) {\r\n      case 'increment':\r\n        return {count: state.count + 1};\r\n      case 'decrement':\r\n        return {count: state.count - 1};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\nconst Example1 = (props) => {\r\n\r\n    const [state1,dispatch] = useReducer(reducer,initialState);\r\n return (\r\n     <>\r\n        count : {state1.count}\r\n        <button onClick = {() => {dispatch({type : 'increment'})}}> + </button>\r\n        <button onClick = {() => {dispatch({type : 'decrement'})}}> - </button>\r\n     </>\r\n )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Example1;","import React from 'react';\nimport './App.css';\nimport Test from './test';\nimport {theme, Themecontext} from './context/contextConfig';\nimport Example from './hooks/hooks';\nimport Example1 from './hooks/hooks1';\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.toggleTheme = (event,str,obj) => {\n      console.log(event,str,obj);\n      obj.current.innerHTML = '改变innerHTML'+Math.random()\n      this.setState(state => ({\n        theme:\n          state.theme === theme.dark\n            ? theme.light\n            : theme.dark,\n      }));\n    };\n    this.state = {\n      theme : theme.light,\n      toggleTheme : this.toggleTheme,\n      testValue : 'test',\n      clickTest : this.clickTest\n    };\n    \n    this.clickTest = this.clickTest.bind(this);\n\n\n  }\n\n  clickTest(str){\n    console.log(str);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>测试点击</div>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n          </a>\n          <Themecontext.Provider value = {this.state}>\n            {/* <Test clickTest = {this.clickTest}></Test>  */}\n            <Test></Test> \n            <Example hooks1 = 'hoo0000000ks1'/>\n            <Example1 />\n          </Themecontext.Provider>\n        </header>\n        \n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}