{"version":3,"sources":["proxy/test.js"],"names":["proxyFun","newObj","Proxy","test","get","target","key","set","value","TypeError","age","name","console","log","Boy","sup","base","descriptor","Object","getOwnPropertyDescriptor","prototype","create","handle","construct","argus","obj","this","apply","that","args","proxy","defineProperty","extend","sex","perter"],"mappings":"2GAAA,gDAAO,IAAMA,EAAW,WACpB,IAAIC,EAAS,IAAIC,MAAMC,EAAK,CACxBC,IADwB,SACpBC,EAAOC,GACP,MAAU,OAAPA,EACQD,EAAOC,GAAO,SAEdD,EAAOC,IAItBC,IATwB,SASpBF,EAAOC,EAAIE,GACX,GAAU,OAAPF,GAAiC,kBAAVE,EAEtB,MAAM,IAAIC,UAAU,6BAIxB,OADAJ,EAAOC,GAAOE,GACP,KAGfP,EAAOS,IAAM,GACbT,EAAOU,KAAO,SACdC,QAAQC,IAAR,4BAAkBZ,EAAOU,KAAzB,mCAAoCV,EAAOS,OAG3CP,EAAO,CACPQ,KAAO,OACPD,IAAM,IAqCNI,EA1BS,SAACC,EAAIC,GACd,IAAIC,EAAaC,OAAOC,yBAAyBH,EAAKI,UAAU,eAChEJ,EAAKI,UAAYF,OAAOG,OAAON,EAAIK,WACnC,IAAIE,EAAS,CACTC,UAAW,SAASlB,EAAOmB,GACvBZ,QAAQC,IAAIR,EAAOmB,EAAMR,GACzB,IAAIS,EAAMP,OAAOG,OAAOL,EAAKI,WAE7B,OADAM,KAAKC,MAAMtB,EAAOoB,EAAID,GACfC,GAEXE,MAAQ,SAAStB,EAAOuB,EAAKC,GACzBjB,QAAQC,IAAIR,EAAOuB,EAAKC,GACxBd,EAAIY,MAAMC,EAAKC,GACfb,EAAKW,MAAMC,EAAKC,KAGpBC,EAAQ,IAAI5B,MAAMc,EAAKM,GAI3B,OAHAL,EAAWT,MAAQsB,EACnBZ,OAAOa,eAAef,EAAKI,UAAU,cAAcH,GACnDL,QAAQC,IAAI,aAAaI,EAAWD,EAAKI,WAClCU,EAMDE,EAHG,SAASrB,GAClBe,KAAKf,KAAOA,KAEQ,SAASA,EAAKD,GAClCgB,KAAKhB,IAAMA,KAEfI,EAAIM,UAAUa,IAAM,IACpB,IAAIC,EAAS,IAAIpB,EAAI,SAAS,IAC9BF,QAAQC,IAAI,UAAUqB,EAAOxB,IAAIwB,EAAOD","file":"static/js/6.84ea8a29.chunk.js","sourcesContent":["export const proxyFun = () => {\r\n    let newObj = new Proxy(test,{\r\n        get(target,key){\r\n            if(key == 'age'){\r\n                return target[key] + '岁';\r\n            }else{\r\n                return target[key];\r\n            }\r\n            \r\n        },\r\n        set(target,key,value){\r\n            if(key == 'age' && typeof value !== 'number'){\r\n                // throw Error('age必须传递number类型');\r\n                throw new TypeError('The age is not an integer');\r\n            }\r\n            // return Reflect.set(target, key, value);\r\n            target[key] = value;\r\n            return true;\r\n        }\r\n    });\r\n    newObj.age = 18;\r\n    newObj.name = 'xiaoma';\r\n    console.log(`名字：${newObj.name}，年龄：${newObj.age}`);\r\n}\r\n\r\nlet test = {\r\n    name : 'phil',\r\n    age : 17\r\n}\r\n\r\n// let test = ()=>{\r\n//     return {\r\n//         name : 'phil',\r\n//         age : 17\r\n//     }\r\n// }\r\n\r\n//第二种，扩展构造函数\r\nvar extend = (sup,base) => {\r\n    let descriptor = Object.getOwnPropertyDescriptor(base.prototype,'constructor');\r\n    base.prototype = Object.create(sup.prototype);\r\n    var handle = {\r\n        construct :function(target,argus){\r\n            console.log(target,argus,base)\r\n            var obj = Object.create(base.prototype)\r\n            this.apply(target,obj,argus);\r\n            return obj;\r\n        },\r\n        apply : function(target,that,args){\r\n            console.log(target,that,args)\r\n            sup.apply(that,args);\r\n            base.apply(that,args);\r\n        }\r\n    };\r\n    var proxy = new Proxy(base,handle);\r\n    descriptor.value = proxy;\r\n    Object.defineProperty(base.prototype,'constructor',descriptor);\r\n    console.log('descriptor',descriptor,base.prototype)\r\n    return proxy;\r\n}\r\n\r\nvar Person = function(name){\r\n    this.name = name;\r\n}\r\nvar Boy = extend(Person,function(name,age){\r\n    this.age = age;\r\n})\r\nBoy.prototype.sex = 'M';\r\nvar perter = new Boy('perter',15);\r\nconsole.log('perter=',perter.age,perter.sex);\r\n\r\n\r\n"],"sourceRoot":""}